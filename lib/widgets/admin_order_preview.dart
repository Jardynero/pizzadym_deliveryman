import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:pizzadym_deliveryman/db/db.dart';
import 'package:pizzadym_deliveryman/functions/functions.dart';
import 'package:pizzadym_deliveryman/models/models.dart';
import 'package:pizzadym_deliveryman/widgets/widgets.dart';
import 'package:url_launcher/url_launcher.dart';

class AdminOrderPreview extends StatefulWidget {
  final OrderData orderData;
  final int currentIndex;
  const AdminOrderPreview({
    required this.orderData,
    required this.currentIndex,
    Key? key,
  }) : super(key: key);

  @override
  State<AdminOrderPreview> createState() => _AdminOrderPreviewState();
}

class _AdminOrderPreviewState extends State<AdminOrderPreview> {
  final String adminEmail = GlobalData.adminEmail;

  final String developerEmail = GlobalData.developerEmail;

  final String? userEmail = FirebaseAuth.instance.currentUser!.email;

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        color: Theme.of(context).colorScheme.background,
        borderRadius: const BorderRadius.only(
          topLeft: Radius.circular(25.0),
          topRight: Radius.circular(25.0),
        ),
      ),
      padding: const EdgeInsets.all(16.0),
      child: SingleChildScrollView(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                DeliveryMethodeLeading(
                    deliveryMethod: widget.orderData.deliveryMethod),
                Text(
                  '–ó–∞–∫–∞–∑ ‚Ññ${widget.orderData.orderNumber} –Ω–∞ ${widget.orderData.totalAmount}‚ÇΩ',
                  style: Theme.of(context).textTheme.headline6,
                ),
              ],
            ),
            Padding(
              padding: const EdgeInsets.symmetric(vertical: 16.0),
              child: Text(widget.orderData.deliveryTime,
                  style: Theme.of(context).textTheme.bodyLarge),
            ),
            Visibility(
              visible: widget.currentIndex == 0 ? true : false,
              child: ButtonIcon(
                label: '–ü–æ—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑ (Push)',
                icon: Icons.check_outlined,
                onPressed: widget.orderData.pushOrderConfirmed == true
                    ? null
                    : () async {
                        setState(
                            () => widget.orderData.pushOrderConfirmed = true);
                        await PushNotifications(
                          message:
                              '–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ë—É–¥–µ–º –¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å –≤ –∫—É—Ä—Å–µ',
                          token: widget.orderData.token,
                          title: '–ü–∏—Ü—Ü–∞ –î–´–º',
                        ).sendPush();
                        UpdateFieldInFirestore(
                          collection: 'deliveryManOrders',
                          doc: widget.orderData.orderNumber.toString(),
                          fieldNameToUpdate: 'push_order_confirmed',
                          value: true,
                        ).updateValue();
                        UpdateFieldInFirestore(
                          collection: 'users',
                          secondCollection: 'orders',
                          doc: widget.orderData.clientPhoneNumber,
                          secondDoc: widget.orderData.orderNumber.toString(),
                          fieldNameToUpdate: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞',
                          value: 1,
                        ).updateValueInSecondCollection();
                      },
              ),
            ),
            Visibility(
              visible: widget.currentIndex == 0 ? true : false,
              child: ButtonIcon(
                label: widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞'
                    ? '–ù–∞–∑–Ω–∞—á–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞ –Ω–∞ –∑–∞–∫–∞–∑'
                    : '–ù–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ',
                icon: Icons.local_shipping_outlined,
                onPressed: widget.orderData.pushOrderConfirmed == true
                    ? () {
                        showDialog(
                          context: context,
                          builder: (BuildContext context) {
                            return AssignToOrderPopup(
                              orderData: widget.orderData,
                            );
                          },
                        );
                      }
                    : null,
              ),
            ),
            Visibility(
              visible: widget.currentIndex == 0 ? false : true,
              child: ButtonIcon(
                label: widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞'
                    ? '–ó–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑ (Push)'
                    : '–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ (Push)',
                icon: Icons.local_shipping_outlined,
                onPressed: widget.orderData.pushOrderInDelivery == true
                    ? null
                    : () {
                        setState(
                            () => widget.orderData.pushOrderInDelivery = true);
                        PushNotifications(
                          message: widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞'
                              ? '–ö—É—Ä—å–µ—Ä —É–∂–µ —Å–ø–µ—à–∏—Ç –∫ –í–∞–º!'
                              : '–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ, –º—ã –í–∞—Å –∂–¥–µ–º)',
                          token: widget.orderData.token,
                          title: '–ü–∏—Ü—Ü–∞ –î—ã–º',
                        ).sendPush();
                        UpdateFieldInFirestore(
                          collection: 'deliveryMans',
                          secondCollection: 'orders',
                          doc: userEmail!,
                          secondDoc: widget.orderData.orderNumber.toString(),
                          fieldNameToUpdate: 'push_order_in_delivery',
                          value: true,
                        ).updateValueInSecondCollection();
                        UpdateFieldInFirestore(
                          collection: 'users',
                          secondCollection: 'orders',
                          doc: widget.orderData.clientPhoneNumber,
                          secondDoc: widget.orderData.orderNumber.toString(),
                          fieldNameToUpdate: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞',
                          value: 2,
                        ).updateValueInSecondCollection();
                      },
              ),
            ),
            Visibility(
              visible: widget.currentIndex == 0 ? false : true,
              child: ButtonIcon(
                label: widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞'
                    ? '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω (Push)'
                    : '–ó–∞–∫–∞–∑ –æ—Ç–¥–∞–Ω –≥–æ—Å—Ç—é (Push)',
                icon: Icons.check_circle_outline,
                onPressed: widget.orderData.pushOrderDelivered == true
                    ? null
                    : () {
                        setState(
                            () => widget.orderData.pushOrderDelivered = true);
                        PushNotifications(
                                message: widget.orderData.deliveryMethod ==
                                        '–î–æ—Å—Ç–∞–≤–∫–∞'
                                    ? '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω üèÅ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –ü–∏—Ü—Ü—É –î—ã–º!'
                                    : '–ó–∞–∫–∞–∑ –≤—ã–¥–∞–Ω üèÅ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –ü–∏—Ü—Ü—É –î—ã–º!',
                                token: widget.orderData.token,
                                title: '–ü–∏—Ü—Ü–∞ –î—ã–º')
                            .sendPush();
                        UpdateFieldInFirestore(
                          collection: 'deliveryMans',
                          secondCollection: 'orders',
                          doc: userEmail!,
                          secondDoc: widget.orderData.orderNumber.toString(),
                          fieldNameToUpdate: 'push_order_delivered',
                          value: true,
                        ).updateValueInSecondCollection();
                        UpdateFieldInFirestore(
                          collection: 'users',
                          secondCollection: 'orders',
                          doc: widget.orderData.clientPhoneNumber,
                          secondDoc: widget.orderData.orderNumber.toString(),
                          fieldNameToUpdate: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞',
                          value: 3,
                        ).updateValueInSecondCollection();
                        DeleteDeliveredOrder(
                          collection: 'deliveryMans',
                          secondCollection: 'orders',
                          doc: userEmail!,
                          secondDoc: widget.orderData.orderNumber.toString(),
                        ).deleteOrder();
                        Navigator.of(context)
                            .popUntil((route) => route.isFirst);
                        ScaffoldMessenger.of(context).showSnackBar(
                          reUsableSnackBar('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç!', context),
                        );
                      },
              ),
            ),
            const SizedBox(height: 10.0),
            Visibility(
              visible:
                  widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞' ? true : false,
              child: OrderPreviewSection(
                sectionTitle: '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏',
                sectionDescription:
                    '${widget.orderData.adress} \n\n–î–µ—Ç–∞–ª–∏: ${widget.orderData.adressDetails}',
              ),
            ),
            Visibility(
              visible:
                  widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞' ? true : false,
              child: OrderPreviewSection(
                sectionTitle: '–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã',
                sectionDescription: widget.orderData.paymentMethod == '–∫–∞—Ä—Ç–æ–π'
                    ? '–û–ø–ª–∞—Ç–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ \n–°–¥–∞—á–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!'
                    : '–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ \n–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å–¥–∞—á—É —Å ${widget.orderData.changeFrom}‚ÇΩ',
              ),
            ),
            Visibility(
              visible:
                  widget.orderData.deliveryMethod == '–î–æ—Å—Ç–∞–≤–∫–∞' ? true : false,
              child: OrderPreviewSection(
                sectionTitle: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞',
                sectionDescription: widget.orderData.comment.isEmpty
                    ? '–ö–ª–∏–µ–Ω—Ç –Ω–µ —É–∫–∞–∑–∞–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
                    : widget.orderData.comment,
              ),
            ),
            const SizedBox(height: 10.0),
            ButtonIcon(
              label: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞',
              icon: Icons.list_outlined,
              onPressed: () {
                showDialog(
                  context: context,
                  builder: (BuildContext context) {
                    return ItemListPopUp(
                      items: widget.orderData.orderItems,
                    );
                  },
                );
              },
            ),
            ButtonIcon(
              label: '–ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É - ${widget.orderData.clientName}',
              icon: Icons.phone_iphone_outlined,
              onPressed: () async {
                await launch('tel://${widget.orderData.clientPhoneNumber}');
              },
            ),
            const SizedBox(height: 10.0),
            Visibility(
              visible: widget.currentIndex == 0 ? true : false,
              child: CancelOrderButton(
                label: '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑',
                icon: Icons.close_outlined,
                onPressed: () async {
                  await PushNotifications(
                    message: '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω ‚ùå',
                    token: widget.orderData.token,
                    title: '–ü–∏—Ü—Ü–∞ –î—ã–º',
                  ).sendPush();
                  UpdateFieldInFirestore(
                    collection: 'users',
                    secondCollection: 'orders',
                    doc: widget.orderData.clientPhoneNumber,
                    secondDoc: widget.orderData.orderNumber.toString(),
                    fieldNameToUpdate: '–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞',
                    value: 3,
                  ).updateValueInSecondCollection();
                  DeleteDeliveredOrder(
                    collection: 'deliveryManOrders',
                    doc: '${widget.orderData.orderNumber}',
                  ).deleteOrderWhenOrderCanceled();
                  ScaffoldMessenger.of(context).showSnackBar(
                    reUsableSnackBar('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω!', context),
                  );
                  Navigator.of(context).popUntil((route) => route.isFirst);
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
